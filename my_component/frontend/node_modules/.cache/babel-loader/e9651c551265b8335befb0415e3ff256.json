{"ast":null,"code":"var _jsxFileName = \"D:\\\\`Mine\\\\Abhishek\\\\`My Files\\\\Streamlit\\\\Interactive DTree Component\\\\my_component\\\\frontend\\\\src\\\\Tree.tsx\",\n  _s = $RefreshSig$();\nimport { withStreamlitConnection } from \"streamlit-component-lib\";\n// import { useRenderData } from \"streamlit-component-lib-react-hooks\"\nimport React, { useRef } from \"react\";\nimport downloadjs from \"downloadjs\";\nimport html2canvas from \"html2canvas\";\nimport { TreeDataContext } from \"./TreeDataContext\";\nimport Node from \"./Node\";\nimport \"./Node.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tree = props => {\n  _s();\n  const args = props.args;\n  const key = args.key;\n  const treeRef = useRef(null);\n  const treeToPng = ref => {\n    toPng(ref.current).then(() => {\n      const canvas = html2canvas(document.body);\n      const dataURL = canvas.toDataURL(\"image/png\");\n      downloadjs(dataURL, \"download.png\", \"image/png\");\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  // const theme = args.theme\n  // const style: React.CSSProperties = {}\n\n  return /*#__PURE__*/_jsxDEV(TreeDataContext.Provider, {\n    value: args,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => treeToPng(treeRef),\n      children: \"Save as Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"rootNode\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Node, {\n            id: 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Tree, \"HHGHCTtmiWvbFMbJlM9n+Rju3RY=\");\n_c = Tree;\nexport default _c2 = withStreamlitConnection(Tree);\nvar _c, _c2;\n$RefreshReg$(_c, \"Tree\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["withStreamlitConnection","React","useRef","downloadjs","html2canvas","TreeDataContext","Node","jsxDEV","_jsxDEV","Tree","props","_s","args","key","treeRef","treeToPng","ref","toPng","current","then","canvas","document","body","dataURL","toDataURL","catch","err","console","log","Provider","value","children","onClick","e","fileName","_jsxFileName","lineNumber","columnNumber","className","id","_c","_c2","$RefreshReg$"],"sources":["D:/`Mine/Abhishek/`My Files/Streamlit/Interactive DTree Component/my_component/frontend/src/Tree.tsx"],"sourcesContent":["import {\n  ComponentProps,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\n// import { useRenderData } from \"streamlit-component-lib-react-hooks\"\nimport React, { useRef } from \"react\"\nimport downloadjs from \"downloadjs\"\nimport html2canvas from \"html2canvas\"\nimport { TreeDataContext } from \"./TreeDataContext\"\nimport Node from \"./Node\"\nimport \"./Node.scss\"\n\nconst Tree = (props: ComponentProps) => {\n  const args = props.args\n  const key = args.key\n\n  const treeRef = useRef(null)\n\n  const treeToPng = (ref: any) => {\n    toPng(ref.current)\n      .then(() => {\n        const canvas = html2canvas(document.body)\n        const dataURL = canvas.toDataURL(\"image/png\")\n        downloadjs(dataURL, \"download.png\", \"image/png\")\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  // const theme = args.theme\n  // const style: React.CSSProperties = {}\n\n  return (\n    <TreeDataContext.Provider value={args}>\n      <button onClick={(e) => treeToPng(treeRef)}>Save as Image</button>\n      <div className=\"tree\">\n        <ul className=\"rootNode\">\n          <li>\n            <Node id={0} />\n          </li>\n        </ul>\n      </div>\n    </TreeDataContext.Provider>\n  )\n}\n\nexport default withStreamlitConnection(Tree)\n"],"mappings":";;AAAA,SAEEA,uBAAuB,QAClB,yBAAyB;AAChC;AACA,OAAOC,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,WAAW,MAAM,aAAa;AACrC,SAASC,eAAe,QAAQ,mBAAmB;AACnD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAIC,KAAqB,IAAK;EAAAC,EAAA;EACtC,MAAMC,IAAI,GAAGF,KAAK,CAACE,IAAI;EACvB,MAAMC,GAAG,GAAGD,IAAI,CAACC,GAAG;EAEpB,MAAMC,OAAO,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAE5B,MAAMa,SAAS,GAAIC,GAAQ,IAAK;IAC9BC,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC,CACfC,IAAI,CAAC,MAAM;MACV,MAAMC,MAAM,GAAGhB,WAAW,CAACiB,QAAQ,CAACC,IAAI,CAAC;MACzC,MAAMC,OAAO,GAAGH,MAAM,CAACI,SAAS,CAAC,WAAW,CAAC;MAC7CrB,UAAU,CAACoB,OAAO,EAAE,cAAc,EAAE,WAAW,CAAC;IAClD,CAAC,CAAC,CACDE,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CAAC;EACN,CAAC;;EAED;EACA;;EAEA,oBACElB,OAAA,CAACH,eAAe,CAACwB,QAAQ;IAACC,KAAK,EAAElB,IAAK;IAAAmB,QAAA,gBACpCvB,OAAA;MAAQwB,OAAO,EAAGC,CAAC,IAAKlB,SAAS,CAACD,OAAO,CAAE;MAAAiB,QAAA,EAAC;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAClE7B,OAAA;MAAK8B,SAAS,EAAC,MAAM;MAAAP,QAAA,eACnBvB,OAAA;QAAI8B,SAAS,EAAC,UAAU;QAAAP,QAAA,eACtBvB,OAAA;UAAAuB,QAAA,eACEvB,OAAA,CAACF,IAAI;YAACiC,EAAE,EAAE;UAAE;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACkB,CAAC;AAE/B,CAAC;AAAA1B,EAAA,CAjCKF,IAAI;AAAA+B,EAAA,GAAJ/B,IAAI;AAmCV,eAAAgC,GAAA,GAAezC,uBAAuB,CAACS,IAAI,CAAC;AAAA,IAAA+B,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module"}