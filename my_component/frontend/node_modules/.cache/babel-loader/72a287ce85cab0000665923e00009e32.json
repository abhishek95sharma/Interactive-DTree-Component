{"ast":null,"code":"var _jsxFileName = \"D:\\\\`Mine\\\\Abhishek\\\\`My Files\\\\Streamlit\\\\Interactive DTree Component\\\\my_component\\\\frontend\\\\src\\\\Node.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useContext, useEffect } from \"react\";\nimport { TreeDataContext } from \"./TreeDataContext\";\nimport { Streamlit } from \"streamlit-component-lib\";\nimport NodeContent from \"./NodeContent\";\nimport EdgeContent from \"./EdgeContent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Node = _ref => {\n  _s();\n  let {\n    id\n  } = _ref;\n  const data = useContext(TreeDataContext);\n  const [childrenVisible, setChildrenVisible] = useState(true);\n  useEffect(() => Streamlit.setFrameHeight(), [childrenVisible]);\n  const node_data = data.find(a => a.node_id === id);\n  const hasLeftChildren = node_data.left !== -1;\n  const hasRightChildren = node_data.right !== -1;\n  const hasChildren = hasLeftChildren && hasRightChildren;\n  function switchChildrenVisible() {\n    setChildrenVisible(!childrenVisible);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NodeContent, {\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), hasChildren && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"child-button\",\n      onClick: e => switchChildrenVisible()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), hasChildren && childrenVisible && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [hasLeftChildren && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(EdgeContent, {\n            id: id,\n            isLeft: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Node, {\n            id: node_data.left\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)\n      }, void 0, false), hasRightChildren && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(EdgeContent, {\n            id: id,\n            isLeft: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Node, {\n            id: node_data.right\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Node, \"/ATjxwSsHyE09VM6KSsp5i3eTgY=\");\n_c = Node;\nexport default Node;\nvar _c;\n$RefreshReg$(_c, \"Node\");","map":{"version":3,"names":["useState","useContext","useEffect","TreeDataContext","Streamlit","NodeContent","EdgeContent","jsxDEV","_jsxDEV","Fragment","_Fragment","Node","_ref","_s","id","data","childrenVisible","setChildrenVisible","setFrameHeight","node_data","find","a","node_id","hasLeftChildren","left","hasRightChildren","right","hasChildren","switchChildrenVisible","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","e","isLeft","_c","$RefreshReg$"],"sources":["D:/`Mine/Abhishek/`My Files/Streamlit/Interactive DTree Component/my_component/frontend/src/Node.tsx"],"sourcesContent":["import { useState, useContext, useEffect } from \"react\"\r\nimport { TreeDataContext } from \"./TreeDataContext\"\r\nimport { Streamlit } from \"streamlit-component-lib\"\r\n\r\nimport NodeContent from \"./NodeContent\"\r\nimport EdgeContent from \"./EdgeContent\"\r\n\r\nexport interface NodeObject {\r\n  node_id: number\r\n  feature: string\r\n  threshold: number\r\n  impurity: number\r\n  n_node_samples: number\r\n  left: number\r\n  right: number\r\n  value: number[]\r\n}\r\n\r\nexport interface NodeId {\r\n  id: number\r\n}\r\n\r\nconst Node = ({ id }: NodeId) => {\r\n  const data: NodeObject[] = useContext(TreeDataContext)\r\n  const [childrenVisible, setChildrenVisible] = useState(true)\r\n\r\n  useEffect(() => Streamlit.setFrameHeight(), [childrenVisible])\r\n\r\n  const node_data = data.find((a) => a.node_id === id)\r\n\r\n  const hasLeftChildren = node_data!.left !== -1\r\n  const hasRightChildren = node_data!.right !== -1\r\n  const hasChildren = hasLeftChildren && hasRightChildren\r\n\r\n  function switchChildrenVisible() {\r\n    setChildrenVisible(!childrenVisible)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NodeContent id={id} />\r\n      {hasChildren && (\r\n        <div\r\n          className=\"child-button\"\r\n          onClick={(e) => switchChildrenVisible()}\r\n        ></div>\r\n      )}\r\n\r\n      {hasChildren && childrenVisible && (\r\n        <ul>\r\n          {hasLeftChildren && (\r\n            <>\r\n              <li>\r\n                <EdgeContent id={id} isLeft={true} />\r\n                <Node id={node_data!.left} />\r\n              </li>\r\n            </>\r\n          )}\r\n          {hasRightChildren && (\r\n            <>\r\n              <li>\r\n                <EdgeContent id={id} isLeft={false} />\r\n                <Node id={node_data!.right} />\r\n              </li>\r\n            </>\r\n          )}\r\n        </ul>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Node\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}