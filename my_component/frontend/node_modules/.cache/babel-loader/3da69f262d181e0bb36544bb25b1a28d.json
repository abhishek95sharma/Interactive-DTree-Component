{"ast":null,"code":"var _jsxFileName = \"D:\\\\`Mine\\\\Abhishek\\\\`My Files\\\\Streamlit\\\\Interactive DTree Component\\\\my_component\\\\frontend\\\\src\\\\Tree.tsx\",\n  _s = $RefreshSig$();\nimport { Streamlit, withStreamlitConnection } from \"streamlit-component-lib\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport downloadjs from \"downloadjs\";\nimport html2canvas from \"html2canvas\";\nimport { ArgsContext } from \"./ArgsContext\";\nimport Node from \"./Node\";\nimport \"./Node.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst setStyle = (attr, value) => {\n  attr = `--${attr.replaceAll(\"_\", \"-\")}`;\n  console.log(attr, value);\n  document.getElementById(\"root\").style.setProperty(attr, value);\n};\nconst Tree = props => {\n  _s();\n  const args = props.args;\n  const key = args.key;\n  const [lastFrameHeight, setLastFrameHeight] = useState(0);\n  const treeRef = useRef(null);\n  console.log(args.style);\n  setStyle(args.style.font_family, \"arial\");\n  setStyle(args.style.font_size, \"0.7em\");\n  setStyle(args.style.max_height, \"2400px\");\n  setStyle(args.style.edge_size, \"150px\");\n  setStyle(args.style.node_size, \"100px\");\n  setStyle(args.style.padding_quantum, \"5px\");\n  setStyle(args.style.edge_color, \"#ccc\");\n  setStyle(args.style.edge_hover_color, \"#94a0b4\");\n  setStyle(args.style.node_hover_color, \"#c8e4f8\");\n  setStyle(args.style.node_border_color, \"#ccc\");\n  setStyle(args.style.text_color, \"#333\");\n  setStyle(args.style.text_hover_color, \"#333\");\n  setStyle(args.style.button_color, \"rgb(185, 145, 145)\");\n  setStyle(args.style.button_hover_color, \"rgb(150, 0, 0)\");\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (treeRef.current != null) {\n        setLastFrameHeight(treeRef.current.clientHeight);\n      }\n    }, 20);\n    Streamlit.setFrameHeight();\n    // console.log(\n    //   lastFrameHeight,\n    //   Streamlit.lastFrameHeight,\n    //   treeRef.current!.clientHeight\n    // )\n    return () => clearInterval(intervalId);\n  }, [lastFrameHeight]);\n  const treeToPng = async () => {\n    const element = document.querySelector(\".tree\");\n    const useWidth = element.scrollWidth;\n    const canvas = await html2canvas(document.querySelector(\".tree\"), {\n      width: useWidth,\n      windowWidth: useWidth\n    });\n    const dataURL = canvas.toDataURL(\"image/jpg\");\n    downloadjs(dataURL, `${key}.jpg`, \"image/jpg\");\n  };\n\n  // const theme = args.theme\n  // const style: React.CSSProperties = {}\n\n  return /*#__PURE__*/_jsxDEV(ArgsContext.Provider, {\n    value: args,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => treeToPng(),\n      children: \"Download as Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree\",\n      ref: treeRef,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"rootNode\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Node, {\n            id: 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Tree, \"SoGxaUiCXSzOhDTIiZ/3yFAc7lw=\");\n_c = Tree;\nexport default _c2 = withStreamlitConnection(Tree);\nvar _c, _c2;\n$RefreshReg$(_c, \"Tree\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["Streamlit","withStreamlitConnection","React","useEffect","useState","useRef","downloadjs","html2canvas","ArgsContext","Node","jsxDEV","_jsxDEV","setStyle","attr","value","replaceAll","console","log","document","getElementById","style","setProperty","Tree","props","_s","args","key","lastFrameHeight","setLastFrameHeight","treeRef","font_family","font_size","max_height","edge_size","node_size","padding_quantum","edge_color","edge_hover_color","node_hover_color","node_border_color","text_color","text_hover_color","button_color","button_hover_color","intervalId","setInterval","current","clientHeight","setFrameHeight","clearInterval","treeToPng","element","querySelector","useWidth","scrollWidth","canvas","width","windowWidth","dataURL","toDataURL","Provider","children","onClick","e","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","id","_c","_c2","$RefreshReg$"],"sources":["D:/`Mine/Abhishek/`My Files/Streamlit/Interactive DTree Component/my_component/frontend/src/Tree.tsx"],"sourcesContent":["import {\n  ComponentProps,\n  Streamlit,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { useEffect, useState, useRef } from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport downloadjs from \"downloadjs\"\nimport html2canvas from \"html2canvas\"\nimport { ArgsContext } from \"./ArgsContext\"\nimport Node from \"./Node\"\nimport \"./Node.scss\"\n\nconst setStyle = (attr: string, value: string) => {\n  attr = `--${attr.replaceAll(\"_\", \"-\")}`\n  console.log(attr, value)\n  document.getElementById(\"root\")!.style.setProperty(attr, value)\n}\n\nconst Tree = (props: ComponentProps) => {\n  const args = props.args\n  const key = args.key\n  const [lastFrameHeight, setLastFrameHeight] = useState(0)\n  const treeRef: any = useRef(null)\n\n  console.log(args.style)\n\n  setStyle(args.style.font_family, \"arial\")\n  setStyle(args.style.font_size, \"0.7em\")\n  setStyle(args.style.max_height, \"2400px\")\n  setStyle(args.style.edge_size, \"150px\")\n  setStyle(args.style.node_size, \"100px\")\n  setStyle(args.style.padding_quantum, \"5px\")\n  setStyle(args.style.edge_color, \"#ccc\")\n  setStyle(args.style.edge_hover_color, \"#94a0b4\")\n  setStyle(args.style.node_hover_color, \"#c8e4f8\")\n  setStyle(args.style.node_border_color, \"#ccc\")\n  setStyle(args.style.text_color, \"#333\")\n  setStyle(args.style.text_hover_color, \"#333\")\n  setStyle(args.style.button_color, \"rgb(185, 145, 145)\")\n  setStyle(args.style.button_hover_color, \"rgb(150, 0, 0)\")\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (treeRef.current != null) {\n        setLastFrameHeight(treeRef.current!.clientHeight)\n      }\n    }, 20)\n    Streamlit.setFrameHeight()\n    // console.log(\n    //   lastFrameHeight,\n    //   Streamlit.lastFrameHeight,\n    //   treeRef.current!.clientHeight\n    // )\n    return () => clearInterval(intervalId)\n  }, [lastFrameHeight])\n\n  const treeToPng = async () => {\n    const element = document.querySelector(\".tree\")!\n    const useWidth = element.scrollWidth\n    const canvas = await html2canvas(document.querySelector(\".tree\")!, {\n      width: useWidth,\n      windowWidth: useWidth,\n    })\n    const dataURL = canvas.toDataURL(\"image/jpg\")\n    downloadjs(dataURL, `${key}.jpg`, \"image/jpg\")\n  }\n\n  // const theme = args.theme\n  // const style: React.CSSProperties = {}\n\n  return (\n    <ArgsContext.Provider value={args}>\n      <button onClick={(e) => treeToPng()}>Download as Image</button>\n      <div className=\"tree\" ref={treeRef}>\n        <ul className=\"rootNode\">\n          <li>\n            <Node id={0} />\n          </li>\n        </ul>\n      </div>\n      <br />\n    </ArgsContext.Provider>\n  )\n}\n\nexport default withStreamlitConnection(Tree)\n"],"mappings":";;AAAA,SAEEA,SAAS,EACTC,uBAAuB,QAClB,yBAAyB;AAChC,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAG1D,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,WAAW,MAAM,aAAa;AACrC,SAASC,WAAW,QAAQ,eAAe;AAC3C,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,QAAQ,GAAGA,CAACC,IAAY,EAAEC,KAAa,KAAK;EAChDD,IAAI,GAAI,KAAIA,IAAI,CAACE,UAAU,CAAC,GAAG,EAAE,GAAG,CAAE,EAAC;EACvCC,OAAO,CAACC,GAAG,CAACJ,IAAI,EAAEC,KAAK,CAAC;EACxBI,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAEC,KAAK,CAACC,WAAW,CAACR,IAAI,EAAEC,KAAK,CAAC;AACjE,CAAC;AAED,MAAMQ,IAAI,GAAIC,KAAqB,IAAK;EAAAC,EAAA;EACtC,MAAMC,IAAI,GAAGF,KAAK,CAACE,IAAI;EACvB,MAAMC,GAAG,GAAGD,IAAI,CAACC,GAAG;EACpB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAMyB,OAAY,GAAGxB,MAAM,CAAC,IAAI,CAAC;EAEjCW,OAAO,CAACC,GAAG,CAACQ,IAAI,CAACL,KAAK,CAAC;EAEvBR,QAAQ,CAACa,IAAI,CAACL,KAAK,CAACU,WAAW,EAAE,OAAO,CAAC;EACzClB,QAAQ,CAACa,IAAI,CAACL,KAAK,CAACW,SAAS,EAAE,OAAO,CAAC;EACvCnB,QAAQ,CAACa,IAAI,CAACL,KAAK,CAACY,UAAU,EAAE,QAAQ,CAAC;EACzCpB,QAAQ,CAACa,IAAI,CAACL,KAAK,CAACa,SAAS,EAAE,OAAO,CAAC;EACvCrB,QAAQ,CAACa,IAAI,CAACL,KAAK,CAACc,SAAS,EAAE,OAAO,CAAC;EACvCtB,QAAQ,CAACa,IAAI,CAACL,KAAK,CAACe,eAAe,EAAE,KAAK,CAAC;EAC3CvB,QAAQ,CAACa,IAAI,CAACL,KAAK,CAACgB,UAAU,EAAE,MAAM,CAAC;EACvCxB,QAAQ,CAACa,IAAI,CAACL,KAAK,CAACiB,gBAAgB,EAAE,SAAS,CAAC;EAChDzB,QAAQ,CAACa,IAAI,CAACL,KAAK,CAACkB,gBAAgB,EAAE,SAAS,CAAC;EAChD1B,QAAQ,CAACa,IAAI,CAACL,KAAK,CAACmB,iBAAiB,EAAE,MAAM,CAAC;EAC9C3B,QAAQ,CAACa,IAAI,CAACL,KAAK,CAACoB,UAAU,EAAE,MAAM,CAAC;EACvC5B,QAAQ,CAACa,IAAI,CAACL,KAAK,CAACqB,gBAAgB,EAAE,MAAM,CAAC;EAC7C7B,QAAQ,CAACa,IAAI,CAACL,KAAK,CAACsB,YAAY,EAAE,oBAAoB,CAAC;EACvD9B,QAAQ,CAACa,IAAI,CAACL,KAAK,CAACuB,kBAAkB,EAAE,gBAAgB,CAAC;EAEzDxC,SAAS,CAAC,MAAM;IACd,MAAMyC,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnC,IAAIhB,OAAO,CAACiB,OAAO,IAAI,IAAI,EAAE;QAC3BlB,kBAAkB,CAACC,OAAO,CAACiB,OAAO,CAAEC,YAAY,CAAC;MACnD;IACF,CAAC,EAAE,EAAE,CAAC;IACN/C,SAAS,CAACgD,cAAc,CAAC,CAAC;IAC1B;IACA;IACA;IACA;IACA;IACA,OAAO,MAAMC,aAAa,CAACL,UAAU,CAAC;EACxC,CAAC,EAAE,CAACjB,eAAe,CAAC,CAAC;EAErB,MAAMuB,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,OAAO,GAAGjC,QAAQ,CAACkC,aAAa,CAAC,OAAO,CAAE;IAChD,MAAMC,QAAQ,GAAGF,OAAO,CAACG,WAAW;IACpC,MAAMC,MAAM,GAAG,MAAMhD,WAAW,CAACW,QAAQ,CAACkC,aAAa,CAAC,OAAO,CAAC,EAAG;MACjEI,KAAK,EAAEH,QAAQ;MACfI,WAAW,EAAEJ;IACf,CAAC,CAAC;IACF,MAAMK,OAAO,GAAGH,MAAM,CAACI,SAAS,CAAC,WAAW,CAAC;IAC7CrD,UAAU,CAACoD,OAAO,EAAG,GAAEhC,GAAI,MAAK,EAAE,WAAW,CAAC;EAChD,CAAC;;EAED;EACA;;EAEA,oBACEf,OAAA,CAACH,WAAW,CAACoD,QAAQ;IAAC9C,KAAK,EAAEW,IAAK;IAAAoC,QAAA,gBAChClD,OAAA;MAAQmD,OAAO,EAAGC,CAAC,IAAKb,SAAS,CAAC,CAAE;MAAAW,QAAA,EAAC;IAAiB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/DxD,OAAA;MAAKyD,SAAS,EAAC,MAAM;MAACC,GAAG,EAAExC,OAAQ;MAAAgC,QAAA,eACjClD,OAAA;QAAIyD,SAAS,EAAC,UAAU;QAAAP,QAAA,eACtBlD,OAAA;UAAAkD,QAAA,eACElD,OAAA,CAACF,IAAI;YAAC6D,EAAE,EAAE;UAAE;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACNxD,OAAA;MAAAqD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE3B,CAAC;AAAA3C,EAAA,CAjEKF,IAAI;AAAAiD,EAAA,GAAJjD,IAAI;AAmEV,eAAAkD,GAAA,GAAevE,uBAAuB,CAACqB,IAAI,CAAC;AAAA,IAAAiD,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module"}