{"ast":null,"code":"var _jsxFileName = \"D:\\\\`Mine\\\\Abhishek\\\\`My Files\\\\Streamlit\\\\Interactive DTree Component\\\\my_component\\\\frontend\\\\src\\\\Tree.tsx\",\n  _s = $RefreshSig$();\nimport { Streamlit, withStreamlitConnection } from \"streamlit-component-lib\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport downloadjs from \"downloadjs\";\nimport html2canvas from \"html2canvas\";\nimport { ArgsContext } from \"./ArgsContext\";\nimport Node from \"./Node\";\nimport \"./Node.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tree = props => {\n  _s();\n  const args = props.args;\n  const key = args.key;\n  const [lastFrameHeight, setLastFrameHeight] = useState(0);\n  const treeRef = useRef(null);\n  document.getElementById(\"root\").style.setProperty(\"--font-family\", \"arial\");\n  document.getElementById(\"root\").style.setProperty(\"--font-size\", \"0.7em\");\n  document.getElementById(\"root\").style.setProperty(\"--max-height\", \"2400px\");\n  document.getElementById(\"root\").style.setProperty(\"--edge-size\", \"150px\");\n  document.getElementById(\"root\").style.setProperty(\"--node-size\", \"100px\");\n  document.getElementById(\"root\").style.setProperty(\"--padding-quantum\", \"5px\");\n  document.getElementById(\"root\").style.setProperty(\"--edge-color\", \"#ccc\");\n  document.getElementById(\"root\").style.setProperty(\"--edge-hover-color\", \"#94a0b4\");\n  document.getElementById(\"root\").style.setProperty(\"--node-hover-color\", \"#c8e4f8\");\n  document.getElementById(\"root\").style.setProperty(\"--node-border-color\", \"#ccc\");\n  document.getElementById(\"root\").style.setProperty(\"--text-color\", \"#333\");\n  document.getElementById(\"root\").style.setProperty(\"--text-hover-color\", \"#333\");\n  document.getElementById(\"root\").style.setProperty(\"--button-color\", \"rgb(185, 145, 145)\");\n  document.getElementById(\"root\").style.setProperty(\"--button-hover-color\", \"rgb(150, 0, 0)\");\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (treeRef.current != null) {\n        setLastFrameHeight(treeRef.current.clientHeight);\n      }\n    }, 20);\n    Streamlit.setFrameHeight();\n    // console.log(\n    //   lastFrameHeight,\n    //   Streamlit.lastFrameHeight,\n    //   treeRef.current!.clientHeight\n    // )\n    return () => clearInterval(intervalId);\n  }, [lastFrameHeight]);\n  const treeToPng = async () => {\n    const element = document.querySelector(\".tree\");\n    const useWidth = element.scrollWidth;\n    const canvas = await html2canvas(document.querySelector(\".tree\"), {\n      width: useWidth,\n      windowWidth: useWidth\n    });\n    const dataURL = canvas.toDataURL(\"image/jpg\");\n    downloadjs(dataURL, `${key}.jpg`, \"image/jpg\");\n  };\n\n  // const theme = args.theme\n  // const style: React.CSSProperties = {}\n\n  return /*#__PURE__*/_jsxDEV(ArgsContext.Provider, {\n    value: args,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => treeToPng(),\n      children: \"Download as Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree\",\n      ref: treeRef,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"rootNode\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Node, {\n            id: 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Tree, \"SoGxaUiCXSzOhDTIiZ/3yFAc7lw=\");\n_c = Tree;\nexport default _c2 = withStreamlitConnection(Tree);\nvar _c, _c2;\n$RefreshReg$(_c, \"Tree\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["Streamlit","withStreamlitConnection","React","useEffect","useState","useRef","downloadjs","html2canvas","ArgsContext","Node","jsxDEV","_jsxDEV","Tree","props","_s","args","key","lastFrameHeight","setLastFrameHeight","treeRef","document","getElementById","style","setProperty","intervalId","setInterval","current","clientHeight","setFrameHeight","clearInterval","treeToPng","element","querySelector","useWidth","scrollWidth","canvas","width","windowWidth","dataURL","toDataURL","Provider","value","children","onClick","e","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","id","_c","_c2","$RefreshReg$"],"sources":["D:/`Mine/Abhishek/`My Files/Streamlit/Interactive DTree Component/my_component/frontend/src/Tree.tsx"],"sourcesContent":["import {\n  ComponentProps,\n  Streamlit,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { useEffect, useState, useRef } from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport downloadjs from \"downloadjs\"\nimport html2canvas from \"html2canvas\"\nimport { ArgsContext } from \"./ArgsContext\"\nimport Node from \"./Node\"\nimport \"./Node.scss\"\n\nconst Tree = (props: ComponentProps) => {\n  const args = props.args\n  const key = args.key\n  const [lastFrameHeight, setLastFrameHeight] = useState(0)\n  const treeRef: any = useRef(null)\n\n  document.getElementById(\"root\")!.style.setProperty(\"--font-family\", \"arial\")\n  document.getElementById(\"root\")!.style.setProperty(\"--font-size\", \"0.7em\")\n  document.getElementById(\"root\")!.style.setProperty(\"--max-height\", \"2400px\")\n  document.getElementById(\"root\")!.style.setProperty(\"--edge-size\", \"150px\")\n  document.getElementById(\"root\")!.style.setProperty(\"--node-size\", \"100px\")\n  document.getElementById(\"root\")!.style.setProperty(\"--padding-quantum\", \"5px\")\n  document.getElementById(\"root\")!.style.setProperty(\"--edge-color\", \"#ccc\")\n  document\n    .getElementById(\"root\")!\n    .style.setProperty(\"--edge-hover-color\", \"#94a0b4\")\n  document\n    .getElementById(\"root\")!\n    .style.setProperty(\"--node-hover-color\", \"#c8e4f8\")\n  document\n    .getElementById(\"root\")!\n    .style.setProperty(\"--node-border-color\", \"#ccc\")\n  document.getElementById(\"root\")!.style.setProperty(\"--text-color\", \"#333\")\n  document\n    .getElementById(\"root\")!\n    .style.setProperty(\"--text-hover-color\", \"#333\")\n  document\n    .getElementById(\"root\")!\n    .style.setProperty(\"--button-color\", \"rgb(185, 145, 145)\")\n  document\n    .getElementById(\"root\")!\n    .style.setProperty(\"--button-hover-color\", \"rgb(150, 0, 0)\")\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (treeRef.current != null) {\n        setLastFrameHeight(treeRef.current!.clientHeight)\n      }\n    }, 20)\n    Streamlit.setFrameHeight()\n    // console.log(\n    //   lastFrameHeight,\n    //   Streamlit.lastFrameHeight,\n    //   treeRef.current!.clientHeight\n    // )\n    return () => clearInterval(intervalId)\n  }, [lastFrameHeight])\n\n  const treeToPng = async () => {\n    const element = document.querySelector(\".tree\")!\n    const useWidth = element.scrollWidth\n    const canvas = await html2canvas(document.querySelector(\".tree\")!, {\n      width: useWidth,\n      windowWidth: useWidth,\n    })\n    const dataURL = canvas.toDataURL(\"image/jpg\")\n    downloadjs(dataURL, `${key}.jpg`, \"image/jpg\")\n  }\n\n  // const theme = args.theme\n  // const style: React.CSSProperties = {}\n\n  return (\n    <ArgsContext.Provider value={args}>\n      <button onClick={(e) => treeToPng()}>Download as Image</button>\n      <div className=\"tree\" ref={treeRef}>\n        <ul className=\"rootNode\">\n          <li>\n            <Node id={0} />\n          </li>\n        </ul>\n      </div>\n      <br />\n    </ArgsContext.Provider>\n  )\n}\n\nexport default withStreamlitConnection(Tree)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}