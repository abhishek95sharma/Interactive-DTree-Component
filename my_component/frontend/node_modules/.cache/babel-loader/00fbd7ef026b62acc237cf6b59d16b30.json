{"ast":null,"code":"var _jsxFileName = \"D:\\\\`Mine\\\\Abhishek\\\\`My Files\\\\Streamlit\\\\Interactive DTree Component\\\\my_component\\\\frontend\\\\src\\\\Node.tsx\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { TreeDataContext } from \"./TreeDataContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Node = _ref => {\n  _s();\n  let {\n    id\n  } = _ref;\n  const data = useContext(TreeDataContext);\n  const node_data = data.find(a => a.node_id === id);\n  console.log(\"\", id);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"node\",\n      children: `${node_data.node_id} | ${node_data.value} | ${node_data.feature} - ${node_data.threshold}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), node_data.left !== -1 && /*#__PURE__*/_jsxDEV(Node, {\n      id: node_data.left\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 34\n    }, this), node_data.right !== -1 && /*#__PURE__*/_jsxDEV(Node, {\n      id: node_data.right\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true);\n};\n_s(Node, \"9aotcXsCzl+BxD3CzSZYmGGgLYc=\");\n_c = Node;\nexport default Node;\nvar _c;\n$RefreshReg$(_c, \"Node\");","map":{"version":3,"names":["useContext","TreeDataContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Node","_ref","_s","id","data","node_data","find","a","node_id","console","log","children","className","value","feature","threshold","fileName","_jsxFileName","lineNumber","columnNumber","left","right","_c","$RefreshReg$"],"sources":["D:/`Mine/Abhishek/`My Files/Streamlit/Interactive DTree Component/my_component/frontend/src/Node.tsx"],"sourcesContent":["import { useContext } from \"react\"\r\nimport { TreeDataContext } from \"./TreeDataContext\"\r\n\r\nexport interface NodeObject {\r\n  node_id: number\r\n  feature: string\r\n  threshold: number\r\n  impurity: number\r\n  n_node_samples: number\r\n  left: number\r\n  right: number\r\n  value: number[]\r\n}\r\n\r\ninterface NodeId {\r\n  id: number\r\n  type: string\r\n}\r\n\r\nconst Node = ({ id }: NodeId) => {\r\n  const data: NodeObject[] = useContext(TreeDataContext)\r\n\r\n  const node_data = data.find((a) => a.node_id === id)\r\n\r\n  console.log(\"\", id)\r\n  return (\r\n    <>\r\n      <div className=\"node\">\r\n        {`${node_data!.node_id} | ${node_data!.value} | ${\r\n          node_data!.feature\r\n        } - ${node_data!.threshold}`}\r\n      </div>\r\n\r\n      {node_data!.left !== -1 && <Node id={node_data!.left} />}\r\n      {node_data!.right !== -1 && <Node id={node_data!.right} />}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Node\r\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,eAAe,QAAQ,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAkBnD,MAAMC,IAAI,GAAGC,IAAA,IAAoB;EAAAC,EAAA;EAAA,IAAnB;IAAEC;EAAW,CAAC,GAAAF,IAAA;EAC1B,MAAMG,IAAkB,GAAGV,UAAU,CAACC,eAAe,CAAC;EAEtD,MAAMU,SAAS,GAAGD,IAAI,CAACE,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,OAAO,KAAKL,EAAE,CAAC;EAEpDM,OAAO,CAACC,GAAG,CAAC,EAAE,EAAEP,EAAE,CAAC;EACnB,oBACEN,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACEd,OAAA;MAAKe,SAAS,EAAC,MAAM;MAAAD,QAAA,EACjB,GAAEN,SAAS,CAAEG,OAAQ,MAAKH,SAAS,CAAEQ,KAAM,MAC3CR,SAAS,CAAES,OACZ,MAAKT,SAAS,CAAEU,SAAU;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,EAELd,SAAS,CAAEe,IAAI,KAAK,CAAC,CAAC,iBAAIvB,OAAA,CAACG,IAAI;MAACG,EAAE,EAAEE,SAAS,CAAEe;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACvDd,SAAS,CAAEgB,KAAK,KAAK,CAAC,CAAC,iBAAIxB,OAAA,CAACG,IAAI;MAACG,EAAE,EAAEE,SAAS,CAAEgB;IAAM;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC1D,CAAC;AAEP,CAAC;AAAAjB,EAAA,CAlBKF,IAAI;AAAAsB,EAAA,GAAJtB,IAAI;AAoBV,eAAeA,IAAI;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}