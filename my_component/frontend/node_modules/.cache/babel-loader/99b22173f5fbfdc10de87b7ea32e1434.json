{"ast":null,"code":"var _jsxFileName = \"D:\\\\`Mine\\\\Abhishek\\\\`My Files\\\\Streamlit\\\\Interactive DTree Component\\\\my_component\\\\frontend\\\\src\\\\Node.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useContext } from \"react\";\nimport { ArgsContext } from \"./ArgsContext\";\nimport NodeContent from \"./NodeContent\";\nimport EdgeContent from \"./EdgeContent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Node = _ref => {\n  _s();\n  let {\n    id\n  } = _ref;\n  const args = useContext(ArgsContext);\n  const data = args.data;\n  const node_data = data.find(a => a.node_id === id);\n  const [childrenVisible, setChildrenVisible] = useState(node_data.childrenVisible != null ? node_data.childrenVisible : true);\n  node_data.childrenVisible = childrenVisible;\n  const hasChildren = node_data.left != null && node_data.right != null;\n  const childrenVisibleStyle = childrenVisible ? {} : {\n    opacity: 0,\n    maxHeight: 0,\n    overflowX: \"hidden\"\n  };\n\n  // console.log(\"id \", id, node_data, hasChildren)\n\n  function switchChildrenVisible() {\n    setChildrenVisible(!childrenVisible);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NodeContent, {\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), hasChildren && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"child-button\",\n      onClick: e => switchChildrenVisible()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), hasChildren && /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: childrenVisibleStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(EdgeContent, {\n          id: id,\n          isLeft: true\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Node, {\n          id: node_data.left.id\n        }, node_data.left.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(EdgeContent, {\n          id: id,\n          isLeft: false\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Node, {\n          id: node_data.right.id\n        }, node_data.right.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Node, \"uz809QAVnZWrd76QeF0q+Zl1I1o=\");\n_c = Node;\nexport default Node;\nvar _c;\n$RefreshReg$(_c, \"Node\");","map":{"version":3,"names":["useState","useContext","ArgsContext","NodeContent","EdgeContent","jsxDEV","_jsxDEV","Fragment","_Fragment","Node","_ref","_s","id","args","data","node_data","find","a","node_id","childrenVisible","setChildrenVisible","hasChildren","left","right","childrenVisibleStyle","opacity","maxHeight","overflowX","switchChildrenVisible","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","e","style","isLeft","_c","$RefreshReg$"],"sources":["D:/`Mine/Abhishek/`My Files/Streamlit/Interactive DTree Component/my_component/frontend/src/Node.tsx"],"sourcesContent":["import { useState, useContext } from \"react\"\r\nimport { ArgsContext } from \"./ArgsContext\"\r\n\r\nimport NodeContent from \"./NodeContent\"\r\nimport EdgeContent from \"./EdgeContent\"\r\n\r\nexport interface NodeObject {\r\n  node_id: number\r\n  left: {\r\n    id: number\r\n    condition: string\r\n  }\r\n  right: {\r\n    id: number\r\n    condition: string\r\n  }\r\n  contents: string[]\r\n  color: string\r\n  childrenVisible: boolean\r\n}\r\n\r\nexport interface NodeId {\r\n  id: number\r\n}\r\n\r\nconst Node = ({ id }: NodeId) => {\r\n  const args = useContext(ArgsContext)\r\n  const data: NodeObject[] = args.data\r\n  const node_data = data.find((a) => a.node_id === id)\r\n  const [childrenVisible, setChildrenVisible] = useState(\r\n    node_data!.childrenVisible != null ? node_data!.childrenVisible : true\r\n  )\r\n\r\n  node_data!.childrenVisible = childrenVisible\r\n\r\n  const hasChildren = node_data!.left != null && node_data!.right != null\r\n  const childrenVisibleStyle = childrenVisible\r\n    ? {}\r\n    : { opacity: 0, maxHeight: 0, overflowX: \"hidden\" }\r\n\r\n  // console.log(\"id \", id, node_data, hasChildren)\r\n\r\n  function switchChildrenVisible() {\r\n    setChildrenVisible(!childrenVisible)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NodeContent id={id} />\r\n      {hasChildren && (\r\n        <div\r\n          className=\"child-button\"\r\n          onClick={(e) => switchChildrenVisible()}\r\n        ></div>\r\n      )}\r\n\r\n      {hasChildren && (\r\n        <ul style={childrenVisibleStyle}>\r\n          <li>\r\n            <EdgeContent id={id} isLeft={true} key={id} />\r\n            <Node id={node_data!.left.id} key={node_data!.left.id} />\r\n          </li>\r\n          <li>\r\n            <EdgeContent id={id} isLeft={false} key={id} />\r\n            <Node id={node_data!.right.id} key={node_data!.right.id} />\r\n          </li>\r\n        </ul>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Node\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}