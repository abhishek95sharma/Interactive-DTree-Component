{"ast":null,"code":"var _jsxFileName = \"D:\\\\`Mine\\\\Abhishek\\\\`My Files\\\\Streamlit\\\\Interactive DTree Component\\\\my_component\\\\frontend\\\\src\\\\EdgeContent.tsx\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { TreeDataContext } from \"./ArgsContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EdgeContent = _ref => {\n  _s();\n  let {\n    id,\n    isLeft\n  } = _ref;\n  const args = useContext(TreeDataContext);\n  const data = args.data;\n  const node_data = data.find(a => a.node_id === id);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edge-content\",\n      children: isLeft ? node_data.left.condition : node_data.left.condition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(EdgeContent, \"/QZJ8hkBbDCcZXGFVIQbGnEOAsA=\");\n_c = EdgeContent;\nexport default EdgeContent;\nvar _c;\n$RefreshReg$(_c, \"EdgeContent\");","map":{"version":3,"names":["useContext","TreeDataContext","jsxDEV","_jsxDEV","Fragment","_Fragment","EdgeContent","_ref","_s","id","isLeft","args","data","node_data","find","a","node_id","children","className","left","condition","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/`Mine/Abhishek/`My Files/Streamlit/Interactive DTree Component/my_component/frontend/src/EdgeContent.tsx"],"sourcesContent":["import { useContext } from \"react\"\r\nimport { TreeDataContext } from \"./ArgsContext\"\r\nimport type { NodeObject } from \"./Node\"\r\n\r\ninterface EdgeType {\r\n  id: number\r\n  isLeft: boolean\r\n}\r\n\r\nconst EdgeContent = ({ id, isLeft }: EdgeType) => {\r\n  const args = useContext(TreeDataContext)\r\n  const data: NodeObject[] = args.data\r\n  const node_data = data.find((a) => a.node_id === id)\r\n\r\n  return (\r\n    <>\r\n      <div className=\"edge-content\">\r\n        {isLeft ? node_data!.left.condition : node_data!.left.condition}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EdgeContent\r\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,eAAe,QAAQ,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAQ/C,MAAMC,WAAW,GAAGC,IAAA,IAA8B;EAAAC,EAAA;EAAA,IAA7B;IAAEC,EAAE;IAAEC;EAAiB,CAAC,GAAAH,IAAA;EAC3C,MAAMI,IAAI,GAAGX,UAAU,CAACC,eAAe,CAAC;EACxC,MAAMW,IAAkB,GAAGD,IAAI,CAACC,IAAI;EACpC,MAAMC,SAAS,GAAGD,IAAI,CAACE,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,OAAO,KAAKP,EAAE,CAAC;EAEpD,oBACEN,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACEd,OAAA;MAAKe,SAAS,EAAC,cAAc;MAAAD,QAAA,EAC1BP,MAAM,GAAGG,SAAS,CAAEM,IAAI,CAACC,SAAS,GAAGP,SAAS,CAAEM,IAAI,CAACC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D;EAAC,gBACN,CAAC;AAEP,CAAC;AAAAhB,EAAA,CAZKF,WAAW;AAAAmB,EAAA,GAAXnB,WAAW;AAcjB,eAAeA,WAAW;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}