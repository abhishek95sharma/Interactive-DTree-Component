{"ast":null,"code":"var _jsxFileName = \"D:\\\\`Mine\\\\Abhishek\\\\`My Files\\\\Streamlit\\\\Interactive DTree Component\\\\my_component\\\\frontend\\\\src\\\\Node.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useContext, useEffect } from \"react\";\nimport { TreeDataContext } from \"./TreeDataContext\";\nimport { Streamlit } from \"streamlit-component-lib\";\nimport NodeContent from \"./NodeContent\";\nimport EdgeContent from \"./EdgeContent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Node = _ref => {\n  _s();\n  let {\n    id\n  } = _ref;\n  const args = useContext(TreeDataContext);\n  const data = args.data;\n  const [childrenVisible, setChildrenVisible] = useState(true);\n  useEffect(() => Streamlit.setFrameHeight(), [childrenVisible]);\n  const node_data = data.find(a => a.node_id === id);\n  const hasLeftChildren = node_data.left !== null;\n  const hasRightChildren = node_data.right !== null;\n  const hasChildren = hasLeftChildren && hasRightChildren;\n  console.log(\"id \", id, node_data, hasLeftChildren, hasRightChildren);\n  function switchChildrenVisible() {\n    setChildrenVisible(!childrenVisible);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NodeContent, {\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), hasChildren && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"child-button\",\n      onClick: e => switchChildrenVisible()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), hasChildren && childrenVisible && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [hasLeftChildren && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(EdgeContent, {\n          id: id,\n          isLeft: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Node, {\n          id: node_data.left.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), hasRightChildren && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(EdgeContent, {\n          id: id,\n          isLeft: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Node, {\n          id: node_data.right.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Node, \"zpx5X8MBqu0oLHZ+bmTWOq6F3U8=\");\n_c = Node;\nexport default Node;\nvar _c;\n$RefreshReg$(_c, \"Node\");","map":{"version":3,"names":["useState","useContext","useEffect","TreeDataContext","Streamlit","NodeContent","EdgeContent","jsxDEV","_jsxDEV","Fragment","_Fragment","Node","_ref","_s","id","args","data","childrenVisible","setChildrenVisible","setFrameHeight","node_data","find","a","node_id","hasLeftChildren","left","hasRightChildren","right","hasChildren","console","log","switchChildrenVisible","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","e","isLeft","_c","$RefreshReg$"],"sources":["D:/`Mine/Abhishek/`My Files/Streamlit/Interactive DTree Component/my_component/frontend/src/Node.tsx"],"sourcesContent":["import { useState, useContext, useEffect } from \"react\"\r\nimport { TreeDataContext } from \"./TreeDataContext\"\r\nimport { Streamlit } from \"streamlit-component-lib\"\r\n\r\nimport NodeContent from \"./NodeContent\"\r\nimport EdgeContent from \"./EdgeContent\"\r\n\r\nexport interface NodeObject {\r\n  node_id: number\r\n  left: {\r\n    id: number\r\n    condition: string\r\n  }\r\n  right: {\r\n    id: number\r\n    condition: string\r\n  }\r\n  contents: string[]\r\n  color: string\r\n}\r\n\r\nexport interface NodeId {\r\n  id: number\r\n}\r\n\r\nconst Node = ({ id }: NodeId) => {\r\n  const args = useContext(TreeDataContext)\r\n  const data: NodeObject[] = args.data\r\n  const [childrenVisible, setChildrenVisible] = useState(true)\r\n\r\n  useEffect(() => Streamlit.setFrameHeight(), [childrenVisible])\r\n\r\n  const node_data = data.find((a) => a.node_id === id)\r\n\r\n  const hasLeftChildren = node_data!.left !== null\r\n  const hasRightChildren = node_data!.right !== null\r\n  const hasChildren = hasLeftChildren && hasRightChildren\r\n\r\n  console.log(\"id \", id, node_data, hasLeftChildren, hasRightChildren)\r\n\r\n  function switchChildrenVisible() {\r\n    setChildrenVisible(!childrenVisible)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NodeContent id={id} />\r\n      {hasChildren && (\r\n        <div\r\n          className=\"child-button\"\r\n          onClick={(e) => switchChildrenVisible()}\r\n        ></div>\r\n      )}\r\n\r\n      {hasChildren && childrenVisible && (\r\n        <ul>\r\n          {hasLeftChildren && (\r\n            <li>\r\n              <EdgeContent id={id} isLeft={true} />\r\n              <Node id={node_data!.left.id} />\r\n            </li>\r\n          )}\r\n          {hasRightChildren && (\r\n            <li>\r\n              <EdgeContent id={id} isLeft={false} />\r\n              <Node id={node_data!.right.id} />\r\n            </li>\r\n          )}\r\n        </ul>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Node\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}