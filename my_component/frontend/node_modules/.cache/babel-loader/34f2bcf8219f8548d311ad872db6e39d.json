{"ast":null,"code":"var _jsxFileName = \"D:\\\\`Mine\\\\Abhishek\\\\`My Files\\\\Streamlit\\\\Interactive DTree Component\\\\my_component\\\\frontend\\\\src\\\\Node.tsx\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { TreeDataContext } from \"./TreeDataContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Node = _ref => {\n  _s();\n  let {\n    id,\n    type\n  } = _ref;\n  const data = useContext(TreeDataContext);\n  const node_data = data.find(a => a.node_id === id);\n  let content = `${node_data.node_id} | ${node_data.value}`;\n  if (type === \"edge\") {\n    content = `${node_data.feature} - ${node_data.threshold}`;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"node\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), node_data.left !== -1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Node, {\n        id: id,\n        type: \"edge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Node, {\n        id: node_data.left,\n        type: \"node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true), node_data.right !== -1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Node, {\n        id: id,\n        type: \"edge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Node, {\n        id: node_data.right,\n        type: \"node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n_s(Node, \"9aotcXsCzl+BxD3CzSZYmGGgLYc=\");\n_c = Node;\nexport default Node;\nvar _c;\n$RefreshReg$(_c, \"Node\");","map":{"version":3,"names":["useContext","TreeDataContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Node","_ref","_s","id","type","data","node_data","find","a","node_id","content","value","feature","threshold","children","className","fileName","_jsxFileName","lineNumber","columnNumber","left","right","_c","$RefreshReg$"],"sources":["D:/`Mine/Abhishek/`My Files/Streamlit/Interactive DTree Component/my_component/frontend/src/Node.tsx"],"sourcesContent":["import { useContext } from \"react\"\r\nimport { TreeDataContext } from \"./TreeDataContext\"\r\n\r\nexport interface NodeObject {\r\n  node_id: number\r\n  feature: string\r\n  threshold: number\r\n  impurity: number\r\n  n_node_samples: number\r\n  left: number\r\n  right: number\r\n  value: number[]\r\n}\r\n\r\ninterface NodeId {\r\n  id: number\r\n  type: string\r\n}\r\n\r\nconst Node = ({ id, type }: NodeId) => {\r\n  const data: NodeObject[] = useContext(TreeDataContext)\r\n\r\n  const node_data = data.find((a) => a.node_id === id)\r\n  let content = `${node_data!.node_id} | ${node_data!.value}`\r\n  if (type === \"edge\") {\r\n    content = `${node_data!.feature} - ${node_data!.threshold}`\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"node\">{content}</div>\r\n\r\n      {node_data!.left !== -1 && (\r\n        <>\r\n          <Node id={id} type=\"edge\" /> <Node id={node_data!.left} type=\"node\" />\r\n        </>\r\n      )}\r\n      {node_data!.right !== -1 && (\r\n        <>\r\n          <Node id={id} type=\"edge\" />\r\n          <Node id={node_data!.right} type=\"node\" />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Node\r\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,eAAe,QAAQ,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAkBnD,MAAMC,IAAI,GAAGC,IAAA,IAA0B;EAAAC,EAAA;EAAA,IAAzB;IAAEC,EAAE;IAAEC;EAAa,CAAC,GAAAH,IAAA;EAChC,MAAMI,IAAkB,GAAGX,UAAU,CAACC,eAAe,CAAC;EAEtD,MAAMW,SAAS,GAAGD,IAAI,CAACE,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,OAAO,KAAKN,EAAE,CAAC;EACpD,IAAIO,OAAO,GAAI,GAAEJ,SAAS,CAAEG,OAAQ,MAAKH,SAAS,CAAEK,KAAM,EAAC;EAC3D,IAAIP,IAAI,KAAK,MAAM,EAAE;IACnBM,OAAO,GAAI,GAAEJ,SAAS,CAAEM,OAAQ,MAAKN,SAAS,CAAEO,SAAU,EAAC;EAC7D;EAEA,oBACEhB,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA;MAAKkB,SAAS,EAAC,MAAM;MAAAD,QAAA,EAAEJ;IAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAEpCb,SAAS,CAAEc,IAAI,KAAK,CAAC,CAAC,iBACrBvB,OAAA,CAAAE,SAAA;MAAAe,QAAA,gBACEjB,OAAA,CAACG,IAAI;QAACG,EAAE,EAAEA,EAAG;QAACC,IAAI,EAAC;MAAM;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC,eAAAtB,OAAA,CAACG,IAAI;QAACG,EAAE,EAAEG,SAAS,CAAEc,IAAK;QAAChB,IAAI,EAAC;MAAM;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACtE,CACH,EACAb,SAAS,CAAEe,KAAK,KAAK,CAAC,CAAC,iBACtBxB,OAAA,CAAAE,SAAA;MAAAe,QAAA,gBACEjB,OAAA,CAACG,IAAI;QAACG,EAAE,EAAEA,EAAG;QAACC,IAAI,EAAC;MAAM;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5BtB,OAAA,CAACG,IAAI;QAACG,EAAE,EAAEG,SAAS,CAAEe,KAAM;QAACjB,IAAI,EAAC;MAAM;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eAC1C,CACH;EAAA,eACD,CAAC;AAEP,CAAC;AAAAjB,EAAA,CA1BKF,IAAI;AAAAsB,EAAA,GAAJtB,IAAI;AA4BV,eAAeA,IAAI;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}