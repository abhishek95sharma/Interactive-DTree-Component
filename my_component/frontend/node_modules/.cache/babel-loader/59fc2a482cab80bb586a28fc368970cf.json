{"ast":null,"code":"var _jsxFileName = \"D:\\\\`Mine\\\\Abhishek\\\\`My Files\\\\Streamlit\\\\Interactive DTree Component\\\\my_component\\\\frontend\\\\src\\\\Tree.tsx\",\n  _s = $RefreshSig$();\nimport { Streamlit, withStreamlitConnection } from \"streamlit-component-lib\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport downloadjs from \"downloadjs\";\nimport html2canvas from \"html2canvas\";\nimport { ArgsContext } from \"./ArgsContext\";\nimport Node from \"./Node\";\nimport \"./Node.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst setStyle = () => {\n  document.getElementById(\"root\").style.setProperty(\"--node-size\", \"100px\");\n};\nconst Tree = props => {\n  _s();\n  const args = props.args;\n  const key = args.key;\n  const [lastFrameHeight, setLastFrameHeight] = useState(0);\n  const treeRef = useRef(null);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (treeRef.current != null) {\n        setLastFrameHeight(treeRef.current.clientHeight);\n      }\n    }, 20);\n    Streamlit.setFrameHeight();\n    // console.log(\n    //   lastFrameHeight,\n    //   Streamlit.lastFrameHeight,\n    //   treeRef.current!.clientHeight\n    // )\n    return () => clearInterval(intervalId);\n  }, [lastFrameHeight]);\n  const treeToPng = async () => {\n    const element = document.querySelector(\".tree\");\n    const useWidth = element.scrollWidth;\n    const canvas = await html2canvas(document.querySelector(\".tree\"), {\n      width: useWidth,\n      windowWidth: useWidth\n    });\n    const dataURL = canvas.toDataURL(\"image/jpg\");\n    downloadjs(dataURL, `${key}.jpg`, \"image/jpg\");\n  };\n\n  // const theme = args.theme\n  // const style: React.CSSProperties = {}\n\n  return /*#__PURE__*/_jsxDEV(ArgsContext.Provider, {\n    value: args,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => treeToPng(),\n      children: \"Download as Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree\",\n      ref: treeRef,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"rootNode\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Node, {\n            id: 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Tree, \"SoGxaUiCXSzOhDTIiZ/3yFAc7lw=\");\n_c = Tree;\nexport default _c2 = withStreamlitConnection(Tree);\nvar _c, _c2;\n$RefreshReg$(_c, \"Tree\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["Streamlit","withStreamlitConnection","React","useEffect","useState","useRef","downloadjs","html2canvas","ArgsContext","Node","jsxDEV","_jsxDEV","setStyle","document","getElementById","style","setProperty","Tree","props","_s","args","key","lastFrameHeight","setLastFrameHeight","treeRef","intervalId","setInterval","current","clientHeight","setFrameHeight","clearInterval","treeToPng","element","querySelector","useWidth","scrollWidth","canvas","width","windowWidth","dataURL","toDataURL","Provider","value","children","onClick","e","fileName","_jsxFileName","lineNumber","columnNumber","className","ref","id","_c","_c2","$RefreshReg$"],"sources":["D:/`Mine/Abhishek/`My Files/Streamlit/Interactive DTree Component/my_component/frontend/src/Tree.tsx"],"sourcesContent":["import {\n  ComponentProps,\n  Streamlit,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { useEffect, useState, useRef } from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport downloadjs from \"downloadjs\"\nimport html2canvas from \"html2canvas\"\nimport { ArgsContext } from \"./ArgsContext\"\nimport Node from \"./Node\"\nimport \"./Node.scss\"\n\nconst setStyle = () => {\n  document.getElementById(\"root\")!.style.setProperty(\"--node-size\", \"100px\")\n}\n\nconst Tree = (props: ComponentProps) => {\n  const args = props.args\n  const key = args.key\n  const [lastFrameHeight, setLastFrameHeight] = useState(0)\n  const treeRef: any = useRef(null)\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (treeRef.current != null) {\n        setLastFrameHeight(treeRef.current!.clientHeight)\n      }\n    }, 20)\n    Streamlit.setFrameHeight()\n    // console.log(\n    //   lastFrameHeight,\n    //   Streamlit.lastFrameHeight,\n    //   treeRef.current!.clientHeight\n    // )\n    return () => clearInterval(intervalId)\n  }, [lastFrameHeight])\n\n  const treeToPng = async () => {\n    const element = document.querySelector(\".tree\")!\n    const useWidth = element.scrollWidth\n    const canvas = await html2canvas(document.querySelector(\".tree\")!, {\n      width: useWidth,\n      windowWidth: useWidth,\n    })\n    const dataURL = canvas.toDataURL(\"image/jpg\")\n    downloadjs(dataURL, `${key}.jpg`, \"image/jpg\")\n  }\n\n  // const theme = args.theme\n  // const style: React.CSSProperties = {}\n\n  return (\n    <ArgsContext.Provider value={args}>\n      <button onClick={(e) => treeToPng()}>Download as Image</button>\n      <div className=\"tree\" ref={treeRef}>\n        <ul className=\"rootNode\">\n          <li>\n            <Node id={0} />\n          </li>\n        </ul>\n      </div>\n      <br />\n    </ArgsContext.Provider>\n  )\n}\n\nexport default withStreamlitConnection(Tree)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}